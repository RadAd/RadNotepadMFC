<?xml version="1.0" encoding="UTF-8"?>
<Scheme>
	<keyword-classes>
		<keyword-class name="pascal">
absolute abstract add and array as asm assembler automated begin case 
cdecl class const constructor default deprecated destructor dispid dispinterface div do downto 
dynamic else end except export exports external far file final finalization finally for 
forward function goto if implementation implements in index inherited initialization inline interface is 
label library message mod name near nil nodefault not object of on or out overload override packed 
pascal platform private procedure program property protected public published raise read readonly
record register reintroduce remove repeat resourcestring safecall sealed set shl shr static 
stdcall stored strict string then threadvar to try type unit unsafe until uses var varargs 
virtual while with write writeonly xor 
		</keyword-class>
	</keyword-classes>
	<language name="pascal" title="Pascal" folding="true" foldcomments="true" foldcompact="false">
		<lexer name="pascal" />
		<comments line="//" streamStart="{" streamEnd="}" blockStart="{*" blockLine=" *" blockEnd=" }" />
		<property name="lexer.pascal.smart.highlighting" value="1" />
		<use-keywords>
			<keyword key="0" name="Keywords" class="pascal"/>
		</use-keywords>
		<use-styles>
			<style name="Default" key="32" />
			<style name="Whitespace" key="0" />
			<style name="Identifier" key="1" />
			<style name="{} Comment" key="2" class="comment"/>
			<style name="(**) Comment" key="3" class="commentbox"/>
			<style name="Line Comment" key="4" class="commentline"/>
			<style name="Preprocessor" key="5" class="preprocessor"/>
			<style name="(*$ Preprocessor" key="6" class="preprocessor"/>
			<style name="Number" key="7" class="number"/>
			<style name="Hex Number" key="8" class="number"/>
			<style name="Keyword" key="9" class="keyword"/>
			<style name="String" key="10" class="string"/>
			<style name="Unclosed String" key="11" class="unclosedstring"/>
			<style name="Character" key="12" class="character"/>
			<style name="Operator" key="13" class="operator"/>
			<style name="Inline Assembly" key="14" fore="804080"/>
		</use-styles>
	</language>
</Scheme>