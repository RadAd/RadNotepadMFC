<?xml version="1.0" encoding="UTF-8"?>
<Scheme>
	<keyword-classes>
		<keyword-class name="keywords.ada.main">
 abort abstract accept access aliased all array at begin body case constant declare delay delta digits do else elsif end entry exception exit for function generic goto if in is limited loop new null of others out package pragma private procedure protected raise range record renames requeue return reverse select separate subtype tagged task terminate then type until use when while with
		</keyword-class>
		<keyword-class name="keywords.ada.operators">
 abs and mod not or rem xor
		</keyword-class>
		<keyword-class name="keywords.ada">
			<include-class name="keywords.ada.main"/><include-class name="keywords.ada.operators"/>
		</keyword-class>
	</keyword-classes>
	<language name="ada" title="Ada" folding="true" foldcomments="true" foldcompact="true" foldpreproc="true">
		<lexer name="ada"/>
		<use-keywords>
			<keyword key="0" name="Keywords" class="keywords.ada"/>
		</use-keywords>
		<use-styles>
			<style name="Default" key="32" />
			<style name="Whitespace" key="0" fore="808080"/>
			<style name="Keyword" key="1" class="keyword"/>
			<style name="Identifiers" key="2" class="identifier"/>
			<style name="Number" key="3" class="number"/>
			<style name="Operators (delimiters)" key="4" class="operator"/>
			<style name="Character" key="5" class="character"/>
			<style name="End of line where character is not closed" key="6" class="character"/>
			<style name="String" key="7" class="string"/>
			<style name="End of line where string is not closed" key="8" class="string"/>
			<style name="Label" key="9" fore="7F0000"/>
			<style name="Comment" key="10" class="comment"/>
			<style name="Illegal token" key="11" fore="FF0000"/>
		</use-styles>
	</language>
</Scheme>
