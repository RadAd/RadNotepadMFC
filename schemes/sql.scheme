<?xml version="1.0" encoding="UTF-8"?>
<Scheme>
	<keyword-classes>
		<keyword-class name="sql">
absolute action add admin after aggregate
alias all allocate alter and any are array as asc
assertion at authorization
before begin binary bit blob boolean both breadth by
call cascade cascaded case cast catalog char character
check class clob close collate collation column commit
completion connect connection constraint constraints
constructor continue corresponding create cross cube current
current_date current_path current_role current_time current_timestamp
current_user cursor cycle
data date day deallocate dec decimal declare default
deferrable deferred delete depth deref desc describe descriptor
destroy destructor deterministic dictionary diagnostics disconnect
distinct domain double drop dynamic
each else end end-exec equals escape every except
exception exec execute external
false fetch first float for foreign found from free full
function
general get global go goto grant group grouping
having host hour
identity if ignore immediate in indicator initialize initially
inner inout input insert int integer intersect interval
into is isolation iterate
join
key
language large last lateral leading left less level like
limit local localtime localtimestamp locator
map match minute modifies modify module month
names national natural nchar nclob new next no none
not null numeric
object of off old on only open operation option
or order ordinality out outer output
pad parameter parameters partial path postfix precision prefix
preorder prepare preserve primary
prior privileges procedure public
read reads real recursive ref references referencing relative
restrict result return returns revoke right
role rollback rollup routine row rows
savepoint schema scroll scope search second section select
sequence session session_user set sets size smallint some| space
specific specifictype sql sqlexception sqlstate sqlwarning start
state statement static structure system_user
table temporary terminate than then time timestamp
timezone_hour timezone_minute to trailing transaction translation
treat trigger true
under union unique unknown
unnest update usage user using
value values varchar variable varying view
when whenever where with without work write
year
zone</keyword-class>
		<keyword-class name="plsql">
all alter and any array as asc at authid avg begin between
binary_integer
body boolean bulk by char char_base check close cluster collect
comment commit compress connect constant create current currval
cursor date day declare decimal default delete desc distinct
do drop else elsif end exception exclusive execute exists exit
extends false fetch float for forall from function goto group
having heap hour if immediate in index indicator insert integer
interface intersect interval into is isolation java level like
limited lock long loop max min minus minute mlslabel mod mode
month natural naturaln new nextval nocopy not nowait null number
number_base ocirowid of on opaque open operator option or order
organization others out package partition pctfree pls_integer
positive positiven pragma prior private procedure public raise
range raw real record ref release return reverse rollback row
rowid rownum rowtype savepoint second select separate set share
smallint space sql sqlcode sqlerrm start stddev subtype successful
sum synonym sysdate table then time timestamp to trigger true
type uid union unique update use user validate values varchar
varchar2 variance view when whenever where while with work write
year zone
		</keyword-class>
	</keyword-classes>
	
	<base-language name="sqlbase">
		<lexer name="sql" />
		<use-styles>
			<style name="Default" key="32" />
			<style name="Whitespace" key="0" />
			<style name="Comment" key="1" class="commentbox"/>
			<style name="Comment Line" key="2" class="commentline"/>
			<style name="Doc Comment" key="3" class="commentdoc"/>
			<style name="Number" key="4" class="number"/>
			<style name="Keyword" key="5" class="keyword"/>
			<style name="Double-Quoted String" key="6" class="string"/>
			<style name="Single-Quoted String" key="7" class="string"/>
			<style name="Symbols" key="8" fore="007f7f"/>
			<style name="Preprocessor" key="9" class="preprocessor"/>
			<style name="Operator" key="10" bold="true"/>
			<style name="Identifier" key="11" />
			<style name="End of line string" key="12" fore="000000" back="e0c0e0" eolfilled="true"/>
			<!-- braces.sql.style=10 -->
		</use-styles>
	</base-language>
	
	<language name="sql" base="sqlbase" title="SQL">
		<use-keywords>
			<keyword key="0" name="Keywords" class="sql"/>
		</use-keywords>
	</language>
	<language name="plsql" base="sqlbase" title="PL/SQL">
		<use-keywords>
			<keyword key="0" name="Keywords" class="plsql"/>
		</use-keywords>
	</language>
</Scheme>