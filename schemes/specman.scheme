<?xml version="1.0" encoding="UTF-8"?>
<Scheme>
	<keyword-classes><keyword-class name="specman">struct unit integer real bool 
	int long uint nibble byte bits bytes bit time string var instance event verilog 
	vhdl on compute start expect check that routine specman is also first only with 
	like list of all radix hex dec bin ignore illegal traceable untraceable cover using 
	count_only trace_only at_least transition item ranges cross text call task within 
	packing low high locker address body code vec chars byte_array external_pointer 
	choose matches if then else when try case casex casez default and or not xor until 
	repeat while for from to step each do break continue before next always -kind network 
	index it me in new return result select cycle sample events forever wait  change  
	negedge rise fall delay sync sim true detach eventually emit gen keep keeping soft 
	before define as computed type extend variable global sys import untyped symtab 
	ECHO DOECHO initialize non_terminal testgroup delayed exit finish out append print 
	outf appendf post_generate pre_generate setup_test finalize_test extract_test init 
	run copy as_a a set_config dut_error add clear lock quit lock unlock release swap 
	quit to_string value stop_run crc_8 crc_32 crc_32_flip get_config add0 all_indices 
	and_all apply average count delete exists first_index get_indices has insert 
	is_a_permutation is_empty key key_exists key_index last last_index max max_index 
	max_value min min_index min_value or_all pop pop0 push push0 product resize reverse 
	sort split sum top top0 unique clear is_all_iterations get_enclosing_unit hdl_path 
	exec deep_compare deep_compare_physical pack unpack warning error fatal size files 
	load module ntv source_ref script read write initial idle others posedge clock cycles 
	statement action command member exp block num file</keyword-class>
<keyword-class name="specman2">TRUE FALSE MAX_INT MIN_INT NULL UNDEF</keyword-class>
<keyword-class name="specman3">any_sequence_item sequence any_sequence_driver driver 
created_driver  parent_sequence bfm_interaction_mode PULL_MODE PUSH_MODE MAIN SIMPLE 
RANDOM max_random_count max_random_depth num_of_last_items NORMAL NONE FULL LOW HIGH 
MEDIUM logger message get_tags show_units show_actions show_message ignore_tags set_style 
set_screen set_file set_flush_frequency set_format set_units set_actions 
at_message_verbosity short_name short_name_path short_name_style private protected package 
rerun any_env unqualified_clk clk reset_start reset_end message_logger verbosity tags 
to_file body pre_body post_body get_next_item send_to_bfm get_depth get_driver nice_string 
get_index grab is_blocked is_relevant ungrab mid_do post_do post_trace pre_do 
current_grabber get_current_item get_num_items_sent get_sequence_trace_list get_trace_list 
is_grabbed try_next_item check_is_relevant delay_clock get_sub_drivers regenerate_data 
wait_for_sequences stop</keyword-class></keyword-classes>
	<language name="specman" title="Specman" folding="true">
		<lexer name="specman" />
		<comments line="//" />
		<use-keywords>
			<keyword key="0" name="Keywords" class="specman" />
			<keyword key="1" name="Keywords 2" class="specman2" />
		</use-keywords>
		<use-styles>
			<style name="Default" key="32" />
			<style name="Whitespace" key="0" />
			<style name="Code" key="1" />
			<style name="Comment Line" key="2" class="commentline"/>
			<style name="Bang Comment" key="3" class="comment" fore="3F7F3F" back="E0F0FF" eolfilled="true"/>
			<style name="Number" key="4" class="number"/>
			<style name="Keyword" key="5" class="keyword"/>
			<style name="String" key="6" class="string"/>
			<style name="Keyword 2" key="7" fore="B00040"/>
			<style name="Keyword 3" key="8" fore="804080" bold="true"/>
			<style name="Preprocessor" key="9" class="preprocessor"/>
			<style name="Operator" key="10" class="operator"/>
			<style name="Identifier" key="11" />
			<style name="End of line string" key="12" class="unclosedstring" eolfilled="true"/>
			<style name="Regexp tag" key="13" fore="007F00" back="E0FFE0"/>
			<style name="HDL signal" key="14" fore="00005F"/>
			<style name="User defined" key="15" fore="E0F0FF"/>
		</use-styles>
	</language>
</Scheme>